@model CandidateProject.ViewModels.CartonDetailsViewModel


@{
    ViewBag.Title = "View Carton Equipment";
    ViewBag.MessageTitle = "Confirm Equipment Removal";
    ViewBag.CartonHasItems = Model.Equipment.Count();
}

<h2>View Carton Equipment</h2>

<h3>@Html.DisplayNameFor(model => model.CartonNumber): @Html.DisplayFor(model => model.CartonNumber) (@ViewBag.CartonHasItems.ToString() of @ViewBag.MaxEquipCount items)</h3>

@if (ViewBag.Message != null)
{
    <p class="text-danger">@ViewBag.MessageTitle : @ViewBag.Message</p>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Equipment.FirstOrDefault().ModelType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Equipment.FirstOrDefault().SerialNumber)
        </th>
        <th>
            @if (ViewBag.CartonHasItems > 0)
            {
                @Html.ActionLink("Remove All", "RemoveEquipmentOnCarton", new { cartonId = Model.CartonId, equipmentId = 0 }, new { onclick = "return confirm('Are you sure you want to empty this carton?');" })
            }
        </th>
    </tr>

    @foreach (var item in Model.Equipment)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ModelType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SerialNumber)
            </td>
            <td>
                @Html.ActionLink("Remove", "RemoveEquipmentOnCarton", new { cartonId = Model.CartonId, equipmentId = item.Id },
                    new { onclick = "return confirm('Are you sure you want to remove equipment from carton?');" })
            </td>
        </tr>
    }

</table>

